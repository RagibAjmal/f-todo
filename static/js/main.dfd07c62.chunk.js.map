{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","post","setPost","state","setState","background","setBackground","handleChange","event","target","value","createPost","axios","content","then","response","data","alert","deletePost","item","delete","id","Array","isArray","useEffect","get","document","monetization","addEventListener","getElementById","classList","add","remove","name","className","type","onChange","placeholder","onClick","map","index","style","label","motion","ul","drag","layout","dragElastic","dragConstraints","left","right","dragMomentum","onDragStart","info","point","x","startinfodrag","onDragEnd","start","deletePostdrag","onDrag","changecolordrag","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.dfd07c62.chunk.js","sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport React  from 'react';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport { AnimateSharedLayout,motion } from \"framer-motion\"\n\nfunction App() {\n\n  const [post, setPost] = React.useState(null);\n  const [state, setState] = React.useState(\"\"); \n  const [background, setBackground] = React.useState(\"linear-gradient(90deg, rgba(63,94,251,1) 0%, rgba(252,70,107,1) 100%)\"); \n  const meta={}\n  \n\n  React.useEffect(() => {\n    axios.get('https://morning-coast-76985.herokuapp.com/todo/?format=json').then((response) => {\n      setPost(response.data);\n    });\n  }, []);\n\n  function handleChange(event) {\n    setState(event.target.value);\n  };\n\n  function createPost() {\n    if(state !== \"\" )\n    {\n      axios\n        .post('https://morning-coast-76985.herokuapp.com/todo/?format=json', {\n          content: state        \n        })\n        .then((response) => {\n          setPost(response.data);\n          setState(\"\");\n        });\n    }\n    else\n    {\n      alert(\"Can't add empty values\")\n    }\n  }\n\n  function deletePost(item) {\n    axios\n      .delete('https://morning-coast-76985.herokuapp.com/todo/?format=json',{data: {\n        id: item     \n      }})\n      .then((response) => { \n        if (Array.isArray(item)) alert(\"All To-Do item deleted!\");\n        else alert(\"To-Do item deleted!\");\n        setPost(response.data);\n      });\n  }\n\n  function deletePostdrag(event, info, item) {\n    if (info.point.x - item.start > 200) {\n      axios\n        .delete('https://morning-coast-76985.herokuapp.com/todo/?format=json', {\n          data: {\n            id: item.id\n          }\n        })\n        .then((response) => {\n          if (Array.isArray(item)) alert(\"All To-Do item deleted!\");\n          else alert(\"To-Do item deleted!\");\n          setPost(response.data);\n          setBackground(\"linear-gradient(90deg, rgba(63,94,251,1) 0%, rgba(252,70,107,1) 100%)\");\n        });\n    };\n    \n  }\n\n  function changecolordrag(event , info , item){\n    if(info.point.x - item.start > 200){ setBackground(\"linear-gradient(180deg, #ff008c 0%, rgb(211, 9, 225) 100%)\") }  \n    else {setBackground(\"linear-gradient(90deg, rgba(63,94,251,1) 0%, rgba(252,70,107,1) 100%)\")};\n  }\n\n  function startinfodrag(event , info , item){\n    if (! ('start' in item)) { \n      item['start'] = info.point.x;\n    }    \n  }\n  \n  if (!post) return null;  \n\n  if (document.monetization){\n    document.monetization.addEventListener('monetizationstart',()=> {\n        document.getElementById('non-monetization').classList.add('hidden');\n    });\n    document.monetization.addEventListener('monetizationstart',()=> {\n      document.getElementById('monetization').classList.remove('hidden');\n  });\n}\n\n  return (\n    <html>\n      <head>\n        <meta name=\"monetization\" content=\"$ilp.uphold.com/LJmbPn7WD4JB\"></meta>\n      </head>\n      <body>\n        <div id=\"non-monetization\" className=\"background-plain\">\n          <div>\n            <input type=\"text\" value={state} onChange={handleChange} placeholder=\"Type your To-Do item\"/>\n            <button onClick={createPost}>Add Item</button>\n            <button onClick={() => deletePost(post)}>Delete All</button>\n          </div>\n          {post.map((item, index) =>\n            <li key={index}>\n              {item.content} <button onClick={() => deletePost(item.id)}>Delete</button>\n            </li>\n          )}\n        </div>\n        <div id=\"monetization\"className=\"background hidden\" style={{ background: background }}>\n\n          <div className=\"card\">\n            <div className=\"p-grid p-fluid\">\n              <div className=\"p-col-12 p-md-4\">\n                <div className=\"p-inputgroup\">\n                  <InputText placeholder=\"Keyword\" value={state} onChange={handleChange} placeholder=\"Type your To-Do item\" />\n                  <Button label=\"Add Item\" onClick={createPost} />\n                  <Button label=\"Delete All\" onClick={() => deletePost(post)} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {post.map((item, index) =>\n\n            <motion.ul drag=\"x\" layout key={index} dragElastic={0.2}\n              dragConstraints={{ left: 0, right: 100 }} dragMomentum={false}\n              onDragStart={(event, info) => startinfodrag(event, info, item)}\n              onDragEnd={(event, info) => deletePostdrag(event, info, item)}\n              onDrag={(event, info) => changecolordrag(event, info, item)}\n            >\n              {item.content}\n            </motion.ul>\n          )}\n\n        </div>\n      </body>\n    </html>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}