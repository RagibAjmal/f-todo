{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","post","setPost","state","setState","background","setBackground","useEffect","axios","get","then","response","data","className","style","placeholder","value","onChange","event","target","label","onClick","content","alert","item","delete","id","Array","isArray","map","index","motion","ul","drag","layout","dragElastic","dragConstraints","left","right","dragMomentum","onDragStart","info","point","x","startinfodrag","onDragEnd","start","deletePostdrag","onDrag","changecolordrag","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAqHeA,MA7Gf,WAEE,MAAwBC,IAAMC,SAAS,MAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BH,IAAMC,SAAS,IAAzC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAoCL,IAAMC,SAAS,yEAAnD,mBAAOK,EAAP,KAAmBC,EAAnB,KAwEA,OArEAP,IAAMQ,WAAU,WACdC,IAAMC,IAAI,+DAA+DC,MAAK,SAACC,GAC7ET,EAAQS,EAASC,WAElB,IAiEEX,EAGH,sBAAKY,UAAU,aAAaC,MAAO,CAAET,WAAWA,GAAhD,UAEE,qBAAKQ,UAAU,OAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,aAAWE,YAAY,UAAUC,MAAOb,EAAOc,SAxE3D,SAAsBC,GACpBd,EAASc,EAAMC,OAAOH,SAuEZ,cAAmF,yBACnF,cAAC,IAAD,CAAQI,MAAM,WAAWC,QArErC,WACe,KAAVlB,EAEDK,IACGP,KAAK,8DAA+D,CACnEqB,QAASnB,IAEVO,MAAK,SAACC,GACLT,EAAQS,EAASC,MACjBR,EAAS,OAKbmB,MAAM,6BAwDE,cAAC,IAAD,CAAQH,MAAM,aAAaC,QAAS,kBApD5BG,EAoD6CvB,OAnD/DO,IACGiB,OAAO,8DAA8D,CAACb,KAAM,CAC3Ec,GAAIF,KAELd,MAAK,SAACC,GACDgB,MAAMC,QAAQJ,GAAOD,MAAM,2BAC1BA,MAAM,uBACXrB,EAAQS,EAASC,SARvB,IAAoBY,cA0DfvB,EAAK4B,KAAI,SAACL,EAAKM,GAAN,OAER,cAACC,EAAA,EAAOC,GAAR,CAAWC,KAAK,IAAIC,QAAM,EAAaC,YAAa,GACpDC,gBAAiB,CAAEC,KAAM,EAAGC,MAAO,KAAOC,cAAc,EACxDC,YAAa,SAACtB,EAAQuB,GAAT,OA3BnB,SAAuBvB,EAAQuB,EAAOjB,GAC7B,UAAWA,IAChBA,EAAI,MAAYiB,EAAKC,MAAMC,GAyBMC,CAAe1B,EAAQuB,EAAOjB,IAC7DqB,UAAW,SAAC3B,EAAQuB,GAAT,OAnDjB,SAAwBvB,EAAOuB,EAAMjB,GAC/BiB,EAAKC,MAAMC,EAAInB,EAAKsB,MAAQ,KAC9BtC,IACGiB,OAAO,8DAA+D,CACrEb,KAAM,CACJc,GAAIF,EAAKE,MAGZhB,MAAK,SAACC,GACDgB,MAAMC,QAAQJ,GAAOD,MAAM,2BAC1BA,MAAM,uBACXrB,EAAQS,EAASC,MACjBN,EAAc,4EAuCayC,CAAgB7B,EAAQuB,EAAMjB,IAC3DwB,OAAQ,SAAC9B,EAAQuB,GAAT,OAlCd,SAAyBvB,EAAQuB,EAAOjB,GACnCiB,EAAKC,MAAMC,EAAInB,EAAKsB,MAAQ,IAAMxC,EAAc,8DAC7CA,EAAc,yEAgCU2C,CAAiB/B,EAAQuB,EAAOjB,IAJ1D,SAMEA,EAAKF,SANyBQ,SAnBpB,MCxELoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.345f3d3f.chunk.js","sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport React  from 'react';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport { AnimateSharedLayout,motion } from \"framer-motion\"\n\nfunction App() {\n\n  const [post, setPost] = React.useState(null);\n  const [state, setState] = React.useState(\"\"); \n  const [background, setBackground] = React.useState(\"linear-gradient(90deg, rgba(63,94,251,1) 0%, rgba(252,70,107,1) 100%)\"); \n  \n\n  React.useEffect(() => {\n    axios.get('https://morning-coast-76985.herokuapp.com/todo/?format=json').then((response) => {\n      setPost(response.data);\n    });\n  }, []);\n\n  function handleChange(event) {\n    setState(event.target.value);\n  };\n\n  function createPost() {\n    if(state !== \"\" )\n    {\n      axios\n        .post('https://morning-coast-76985.herokuapp.com/todo/?format=json', {\n          content: state        \n        })\n        .then((response) => {\n          setPost(response.data);\n          setState(\"\");\n        });\n    }\n    else\n    {\n      alert(\"Can't add empty values\")\n    }\n  }\n\n  function deletePost(item) {\n    axios\n      .delete('https://morning-coast-76985.herokuapp.com/todo/?format=json',{data: {\n        id: item     \n      }})\n      .then((response) => { \n        if (Array.isArray(item)) alert(\"All To-Do item deleted!\");\n        else alert(\"To-Do item deleted!\");\n        setPost(response.data);\n      });\n  }\n\n  function deletePostdrag(event, info, item) {\n    if (info.point.x - item.start > 200) {\n      axios\n        .delete('https://morning-coast-76985.herokuapp.com/todo/?format=json', {\n          data: {\n            id: item.id\n          }\n        })\n        .then((response) => {\n          if (Array.isArray(item)) alert(\"All To-Do item deleted!\");\n          else alert(\"To-Do item deleted!\");\n          setPost(response.data);\n          setBackground(\"linear-gradient(90deg, rgba(63,94,251,1) 0%, rgba(252,70,107,1) 100%)\");\n        });\n    };\n    \n  }\n\n  function changecolordrag(event , info , item){\n    if(info.point.x - item.start > 200){ setBackground(\"linear-gradient(180deg, #ff008c 0%, rgb(211, 9, 225) 100%)\") }  \n    else {setBackground(\"linear-gradient(90deg, rgba(63,94,251,1) 0%, rgba(252,70,107,1) 100%)\")};\n  }\n\n  function startinfodrag(event , info , item){\n    if (! ('start' in item)) { \n      item['start'] = info.point.x;\n    }    \n  }\n  \n  if (!post) return null;  \n\n  return (\n    <div className=\"background\" style={{ background:background }}>\n\n      <div className=\"card\">\n        <div className=\"p-grid p-fluid\">\n          <div className=\"p-col-12 p-md-4\">\n            <div className=\"p-inputgroup\">\n              <InputText placeholder=\"Keyword\" value={state} onChange={handleChange} placeholder=\"Type your To-Do item\"/>\n              <Button label=\"Add Item\" onClick={createPost}/>\n              <Button label=\"Delete All\" onClick={() => deletePost(post)}/>\n            </div>\n          </div>\n        </div>\n      </div> \n\n      {post.map((item,index) => \n      \n        <motion.ul drag=\"x\" layout key={index} dragElastic={0.2} \n        dragConstraints={{ left: 0, right: 100 }} dragMomentum={false} \n        onDragStart={(event , info) => startinfodrag( event , info , item )}\n        onDragEnd={(event , info) => deletePostdrag( event , info, item )}\n        onDrag={(event , info) => changecolordrag( event , info , item )}\n        > \n         {item.content }\n        </motion.ul>\n      )}\n            \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}